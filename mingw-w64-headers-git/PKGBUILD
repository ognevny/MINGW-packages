# Maintainer: Alexey Pavlov <alexpux@gmail.com>

_realname=headers
pkgbase=mingw-w64-${_realname}-git
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
pkgdesc="MinGW-w64 headers for Windows (mingw-w64)"
pkgver=12.0.0.r731.g2ca6f1348
pkgrel=100
_commit='2ca6f1348cab58b5b994fd5916ff57445ade22f8'
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clangarm64')
url="https://www.mingw-w64.org/"
msys2_repository_url="https://sourceforge.net/p/mingw-w64/mingw-w64/ci/master/tree/mingw-w64-headers/"
license=('spdx:ZPL-2.1 AND LGPL-2.1-or-later')
groups=("${MINGW_PACKAGE_PREFIX}-toolchain")
makedepends=("${MINGW_PACKAGE_PREFIX}-tools"
             "${MINGW_PACKAGE_PREFIX}-autotools"
             'git')
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
options=('!strip' '!emptydirs')
# patches are taken from
# https://gitlab.torproject.org/tpo/applications/tor-browser-build/-/tree/main/projects/mingw-w64-clang
source=("mingw-w64"::"git+https://git.code.sf.net/p/mingw-w64/mingw-w64#commit=$_commit"
        "mingw-dwrite_3.patch"
        "mingw-enum.patch"
        "mingw-widl.patch"
        "mingw-dispatchqueue.patch"
        "mingw-ts_sd.patch"
        "mingw-foundation_redef.patch"
        "mingw-webrtc.patch")
sha256sums=('7151f7b1d04445fa4ec40a3edabdafa4b12867aaf64f3ad8329e9fcc3e05b7c3'
            '52c5f1b017538ff2876878dd411f4c3846a1c180634adb94ce85de4282f462e2'
            '75167a0c1f4c9d95f17869bec7a7beb5d2375c8248901924e16b4987d742e8cd'
            '1d6ec40b06829f65ae9ec89013a1a4fdaa879c5abd515cc1d94528e174a2e73f'
            '0125714b8c1f141371ffd4075a7c29b450fbb211fa992cece46b2fab5118802d'
            '157652d11054eeb4e02af9f40fe035d264810c3865c9177c607175e511ec360a'
            'cbe497bb8224f84f3d241c06ece8c1b7151fb935549d12cdb7ba834e6c2619d4'
            '8c1eab106180486b531ac4930aecd8b9731cb4041885c744f0e15c2e2a0c5097')

pkgver() {
  cd "${srcdir}/mingw-w64"
  git describe --long ${_commit} | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//g'
}

_apply_patch_with_msg() {
  for _patch in "$@"; do
    msg2 "Applying ${_patch}"
    patch -p1 < "${srcdir}/${_patch}"
  done
}

prepare() {
  cd "${srcdir}/mingw-w64"
  _apply_patch_with_msg \
    mingw-dwrite_3.patch \
    mingw-enum.patch \
    mingw-widl.patch \
    mingw-dispatchqueue.patch \
    mingw-ts_sd.patch \
    mingw-foundation_redef.patch \
    mingw-webrtc.patch
}

build() {
  declare -a _extra_config
  if [[ ${MSYSTEM} == MINGW* ]]; then # MINGW32 & MINGW64
      _extra_config+=("--with-default-win32-winnt=0x601") # Windows 7
  elif [[ ${MSYSTEM} != CLANGARM64 ]]; then # UCR64 & CLANG64
      _extra_config+=("--with-default-win32-winnt=0x603") # Windows 8.1
  else # CLANGARM64
      _extra_config+=("--with-default-win32-winnt=0xA00") # Windows 10
  fi

  if [[ $MINGW_PACKAGE_PREFIX == *-clang-* ]] || [[ $MINGW_PACKAGE_PREFIX == *-ucrt-* ]]; then
    _extra_config+=("--with-default-msvcrt=ucrt")
  else
    _extra_config+=("--with-default-msvcrt=msvcrt")
  fi

  mkdir -p "${srcdir}"/headers-${MSYSTEM} && cd "${srcdir}"/headers-${MSYSTEM}

  "${srcdir}"/mingw-w64/mingw-w64-headers/configure \
    --prefix=${MINGW_PREFIX} \
    --enable-sdk=all \
    "${_extra_config[@]}" \
    --enable-idl
}

package() {
  cd "${srcdir}"/headers-${MSYSTEM}
  make DESTDIR="${pkgdir}" install

  rm "${pkgdir}"${MINGW_PREFIX}/include/pthread_signal.h
  rm "${pkgdir}"${MINGW_PREFIX}/include/pthread_time.h
  rm "${pkgdir}"${MINGW_PREFIX}/include/pthread_unistd.h

  install -Dm644 "${srcdir}"/mingw-w64/mingw-w64-headers/ddk/readme.txt "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/ddk-readme.txt
  install -Dm644 "${srcdir}"/mingw-w64/COPYING "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/COPYING
  install -Dm644 "${srcdir}"/mingw-w64/COPYING.MinGW-w64/COPYING.MinGW-w64.txt "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.MinGW-w64.txt
  install -Dm644 "${srcdir}"/mingw-w64/COPYING.MinGW-w64-runtime/COPYING.MinGW-w64-runtime.txt "${pkgdir}"${MINGW_PREFIX}/share/licenses/${_realname}/COPYING.MinGW-w64-runtime.txt
}
